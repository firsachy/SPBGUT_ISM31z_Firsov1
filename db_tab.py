import tkinter as tk
import os
import sqlite3

class DBTab:
    def __init__(self, parent_frame, database):
        self.frame = parent_frame
        self.db = database
        self.setup_ui()
    
    def setup_ui(self):
        title = tk.Label(self.frame, text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö", 
                        font=("Arial", 14), pady=20)
        title.pack()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î
        stats_frame = tk.Frame(self.frame)
        stats_frame.pack(pady=10)
        
        self.stats_label = tk.Label(stats_frame, 
                                   text="–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...",
                                   font=("Arial", 10))
        self.stats_label.pack()
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttons_frame = tk.Frame(self.frame)
        buttons_frame.pack(pady=20)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –ë–î
        self.reset_btn = tk.Button(buttons_frame,
                                  text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö",
                                  width=20,
                                  height=2,
                                  bg="#FF6B6B",
                                  fg="white",
                                  font=("Arial", 10, "bold"),
                                  command=self.reset_database)
        self.reset_btn.pack(pady=5)
        
        # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.refresh_btn = tk.Button(buttons_frame,
                                    text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
                                    width=20,
                                    height=2,
                                    bg="#4ECDC4",
                                    fg="white",
                                    font=("Arial", 10, "bold"),
                                    command=self.update_stats)
        self.refresh_btn.pack(pady=5)
        
        # –°—Ç–∞—Ç—É—Å
        self.status_label = tk.Label(self.frame,
                                    text="–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –∞–∫—Ç–∏–≤–Ω–∞",
                                    font=("Arial", 9),
                                    fg="green")
        self.status_label.pack(pady=10)
        
        # –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.update_stats()
    
    def update_stats(self):
        """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ë–î"""
        try:
            # –ó–¥–µ—Å—å –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏–º —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            db_path = "data/feedback.db"
            if os.path.exists(db_path):
                size = os.path.getsize(db_path)
                self.stats_label.config(
                    text=f"–†–∞–∑–º–µ—Ä –ë–î: {size} –±–∞–π—Ç\n–ó–∞–ø–∏—Å–µ–π: 0"  # –í—Ä–µ–º–µ–Ω–Ω–æ
                )
                self.status_label.config(
                    text="–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –∞–∫—Ç–∏–≤–Ω–∞",
                    fg="green"
                )
            else:
                self.stats_label.config(text="–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                self.status_label.config(
                    text="–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
                    fg="red"
                )
        except Exception as e:
            self.stats_label.config(text=f"–û—à–∏–±–∫–∞: {str(e)}")
    
    def reset_database(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
        import tkinter.messagebox as msgbox
        
        result = msgbox.askyesno(
            "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
            "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö?\n\n"
            "–í—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–¥–±–µ–∫–∏ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ!"
        )
        
        if result:
            try:
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –ë–î
                self.db.close_connection()
                import time
                time.sleep(0.5)
                
                db_path = "data/feedback.db"
                if os.path.exists(db_path):
                    os.remove(db_path)
                    
                self.db.reconnect()
                
                self.status_label.config(
                    text="–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –û–ß–ò–©–ï–ù–ê", 
                    fg="orange"
                )
                self.update_stats()
                
                msgbox.showinfo("–£—Å–ø–µ—Ö", "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞!")
                
            except Exception as e:
                msgbox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –ë–î: {str(e)}")